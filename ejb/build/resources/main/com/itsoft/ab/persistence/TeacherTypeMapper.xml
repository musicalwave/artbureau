<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itsoft.ab.persistence.TeacherTypeMapper" >

    <resultMap id="result" type="TeacherTypeModel">
        <result property="id" column="id"/>
        <result property="active" column="active"/>
        <result property="teacherId" column="teacherId"/>
        <result property="typeId" column="typeId"/>
        <result property="pPrice" column="pPrice"/>
        <result property="gPrice" column="gPrice"/>
        <result property="aPrice" column="aPrice"/>
        <result property="dPrice" column="dPrice"/>
        <result property="teacherName" column="teacherName"/>
        <result property="typeName" column="typeName"/>
    </resultMap>

    <!--All queries here-->

    <select id="getAllActive" resultMap="result">
        SELECT
        J_TEACHERS_TYPES.*,
        types.name AS typeName,
        teachers.name AS teacherName
        FROM J_TEACHERS_TYPES, teachers, types
        WHERE J_TEACHERS_TYPES.active=1
        AND teachers.id = J_TEACHERS_TYPES.teacherId
        AND types.id = J_TEACHERS_TYPES.typeId
    </select>

    <select id="getById" parameterType="int" resultType="TeacherTypeModel">
        SELECT
        J_TEACHERS_TYPES.*,
        types.name AS typeName,
        teachers.name AS teacherName
        FROM J_TEACHERS_TYPES, teachers, types
        WHERE J_TEACHERS_TYPES.id = #{id}
        AND teachers.id = J_TEACHERS_TYPES.teacherId
        AND types.id = J_TEACHERS_TYPES.typeId
    </select>

    <select id="getAllActiveByType" parameterType="int" resultMap="result">
        SELECT
        J_TEACHERS_TYPES.*,
        teachers.name AS teacherName
        FROM J_TEACHERS_TYPES, teachers
        WHERE J_TEACHERS_TYPES.active=1
        AND teachers.id = J_TEACHERS_TYPES.teacherId
        AND J_TEACHERS_TYPES.typeId = #{id}
    </select>

    <select id="getTeacherTypes" parameterType="int" resultType="TeacherTypeModel">
        SELECT
        J_TEACHERS_TYPES.*
        FROM J_TEACHERS_TYPES
        WHERE J_TEACHERS_TYPES.teacherId = #{id}
    </select>

    <insert id="insertTypeTeacher" parameterType="map">
        INSERT INTO J_TEACHERS_TYPES (teacherId, typeId)
        VALUES (#{teacher, javaType=int, jdbcType=INTEGER},
        #{type, javaType=int, jdbcType=INTEGER})
    </insert>

    <delete id="deleteTypeTeacher" parameterType="int">
        DELETE FROM J_TEACHERS_TYPES
        WHERE id = #{id}
    </delete>

    <insert id="insertModel" parameterType="TeacherTypeModel">
        INSERT INTO J_TEACHERS_TYPES (teacherId, typeId, pPrice, dPrice, aPrice, gPrice, pPay, dPay, aPay, gPay)
        VALUES (#{teacherId},
        #{typeId},
        #{pPrice},
        #{dPrice},
        #{aPrice},
        #{gPrice},
        #{pPay},
        #{dPay},
        #{aPay},
        #{gPay});
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID();
        </selectKey>
    </insert>

    <select id="getTypeByTeacherAndType" parameterType="map" resultType="TeacherTypeModel">
        SELECT
        t.id AS teacherId,
        t.name AS teacherName,
        tt.id AS typeId,
        tt.name AS typeName,
        j.id AS id,
        j.pPrice AS pPrice,
        j.dPrice AS dPrice,
        j.gPrice AS gPrice,
        j.aPrice AS aPrice,
        j.pPay AS pPay,
        j.dPay AS dPay,
        j.gPay AS gPay,
        j.aPay AS aPay
        FROM J_TEACHERS_TYPES j
        LEFT JOIN teachers t ON t.id = j.teacherId
        LEFT JOIN types tt ON tt.id = j.typeId
        WHERE j.teacherId = #{teacher}
        AND j.typeId = #{type}
    </select>

    <update id="updateType" parameterType="TeacherTypeModel">
         UPDATE J_TEACHERS_TYPES
         SET
         pPrice = #{pPrice, javaType=int, jdbcType=INTEGER},
         dPrice = #{dPrice, javaType=int, jdbcType=INTEGER},
         gPrice = #{gPrice, javaType=int, jdbcType=INTEGER},
         aPrice = #{aPrice, javaType=int, jdbcType=INTEGER},
         pPay = #{pPay, javaType=int, jdbcType=INTEGER},
         dPay = #{dPay, javaType=int, jdbcType=INTEGER},
         gPay = #{gPay, javaType=int, jdbcType=INTEGER},
         aPay = #{aPay, javaType=int, jdbcType=INTEGER}
         WHERE
         id = #{id}
    </update>

</mapper>